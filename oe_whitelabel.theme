<?php

/**
 * @file
 * Functions to support theming.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook__preprocess_links__language_block().
 */
function oe_whitelabel_preprocess_links__language_block(&$variables) {
  $currentLanguage = \Drupal::languageManager()->getCurrentLanguage();
  $current_language_id = $currentLanguage->getId();
  $language_config_storage = \Drupal::entityTypeManager()->getStorage('configurable_language');
  $eu_links = [];
  $non_eu_links = [];

  foreach ($variables['links'] as $language_code => $link) {
    /** @var \Drupal\Core\Url $url */
    $url = $link['link']['#url'];
    $href = $url
      ->setOptions($link['link']['#options'])
      ->setAbsolute(TRUE)
      ->toString();
    $label = $link['link']['#title'];

    $link = [
      'href' => $href,
      'name' => $label,
      'id' => 'link_' . $language_code,
      'hreflang' => $language_code,
    ];

    if (!empty($current_language_id) && $language_code === $current_language_id) {
      $variables['language']['link'] = $link;
      $variables['language']['link']['target'] = 'languageModal';
      $link['active'] = TRUE;
    }

    $language_config = $language_config_storage->load($language_code);
    $category = $language_config->getThirdPartySetting('oe_multilingual', 'category');

    if ($category === 'eu') {
      $eu_links[$language_code] = $link;
    }
    else {
      $non_eu_links[$language_code] = $link;
    }
  }

  $variables['language']['modal'] = [
    'id' => 'languageModal',
    'size' => 'fullscreen',
    'header' => [
      'title' => t('Select your language'),
      'label' => t('Close'),
    ],
    'eu_links' => $eu_links,
    'non_eu_links' => $non_eu_links,
    'footer' => [
      'label' => t('Close'),
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter() for facets_forms.
 */
function oe_whitelabel_form_facets_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['actions'])) {
    $action_classes = ['mt-4', 'd-grid', 'gap-4', 'd-md-block'];
    foreach ($action_classes as $action_class) {
      if (!isset($action_class, $form['actions']['#attributes']['class']) || !in_array($action_class, $form['actions']['#attributes']['class'], TRUE)) {
        $form['actions']['#attributes']['class'][] = $action_class;
      }
    }
  }
  if (isset($form['actions']['submit'])) {
    $submit_classes = ['me-md-3', 'btn', 'btn-primary', 'btn-md'];
    foreach ($submit_classes as $submit_class) {
      if (!isset($submit_class, $form['actions']['submit']['#attributes']['class']) || !in_array($submit_class, $form['actions']['submit']['#attributes']['class'], TRUE)) {
        $form['actions']['submit']['#attributes']['class'][] = $submit_class;
      }
    }
  }
  if (isset($form['actions']['reset'])) {
    $reset_classes = ['btn', 'btn-light', 'btn-md'];
    foreach ($reset_classes as $reset_class) {
      if (!isset($form['actions']['reset']['#attributes']['class']) || !in_array($reset_class, $form['actions']['reset']['#attributes']['class'], TRUE)) {
        $form['actions']['reset']['#attributes']['class'][] = $reset_class;
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function oe_whitelabel_form_system_theme_settings_alter(&$form, FormStateInterface &$form_state, $form_id = NULL) {
  $form['component_library'] = [
    '#type' => 'select',
    '#title' => t('Component library'),
    '#options' => [
      'neutral' => t('Neutral'),
      'ec' => t('European Commission'),
      'eu' => t('European Union'),
    ],
    '#default_value' => theme_get_setting('component_library') ?? 'eu',
    '#description' => t('Choose "European Commission" for websites hosted under the ec.europa.eu domain and "European Union" for websites hosted under the europa.eu domain.'),
  ];
  $form['header_style'] = [
    '#type' => 'select',
    '#title' => t('Background style'),
    '#options' => [
      'standard' => t('Blue header'),
      'light' => t('Light header'),
    ],
    '#default_value' => theme_get_setting('header_style'),
    '#description' => t('Choose the header color'),
  ];
}

/**
 * Implements hook_preprocess().
 */
function oe_whitelabel_preprocess(&$variables) {
  $variables['bcl_component_library'] = theme_get_setting('component_library') ?? 'eu';
  $variables['bcl_header_style'] = theme_get_setting('header_style') ?? 'standard';
}
