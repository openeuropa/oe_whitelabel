<?php

/**
 * @file
 * OE Whitelabel theme Person.
 */

declare(strict_types =  1);

use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Template\Attribute;
use Drupal\media\MediaInterface;
use Drupal\media\Plugin\media\Source\Image;
use Drupal\media_avportal\Plugin\media\Source\MediaAvPortalPhotoSource;
use Drupal\oe_bootstrap_theme\ValueObject\ImageValueObject;

/**
 * Implements hook_preprocess_HOOK() for Person ct in content banner view mode.
 */
function oe_whitelabel_starter_person_preprocess_node__oe_sc_person__oe_w_content_banner(array &$variables) {
  _oe_whitelabel_starter_person_preprocess_image($variables);
  _oe_whitelabel_starter_person_social_media_links($variables);
}

/**
 * Implements hook_preprocess_HOOK() for Person ct in teaser view mode.
 */
function oe_whitelabel_starter_person_preprocess_node__oe_sc_person__teaser(array &$variables) {
  _oe_whitelabel_starter_person_preprocess_image($variables);
}

/**
 * Helper function to prepare the image for Person ct.
 *
 * @param array $variables
 *   Variables from the theme preprocess function.
 */
function _oe_whitelabel_starter_person_preprocess_image(array &$variables): void {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  // Bail out if there is no image present.
  if ($node->get('oe_sc_person_image')->isEmpty()) {
    return;
  }

  /** @var \Drupal\media\Entity\Media $media */
  $media = $node->get('oe_sc_person_image')->entity;
  if (!$media instanceof MediaInterface) {
    // The media entity is not available anymore, bail out.
    return;
  }

  // Retrieve the correct media translation.
  /** @var \Drupal\media\Entity\Media $media */
  $media = \Drupal::service('entity.repository')->getTranslationFromContext($media, $node->language()->getId());
  $cacheability = CacheableMetadata::createFromRenderArray($variables);
  $cacheability->addCacheableDependency($media);

  // Run access checks on the media entity.
  $access = $media->access('view', $variables['user'], TRUE);
  $cacheability->addCacheableDependency($access);
  if (!$access->isAllowed()) {
    $cacheability->applyTo($variables);
    return;
  }

  // Get the media source.
  $source = $media->getSource();

  $is_image = $source instanceof MediaAvPortalPhotoSource || $source instanceof Image;

  // If it's not an image bail out.
  if (!$is_image) {
    $cacheability->applyTo($variables);
    return;
  }

  $thumbnail = $media->get('thumbnail')->first();
  $variables['image'] = ImageValueObject::fromImageItem($thumbnail);

  $cacheability->applyTo($variables);
}

/**
 * Helper function to preprocess the social media links.
 *
 * @param array $variables
 *   Variables from the preprocess function.
 */
function _oe_whitelabel_starter_person_social_media_links(array &$variables): void {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  $attributes = new Attribute([
    'class' => [
      'd-block',
      'd-md-inline-block',
      'mb-3',
      'mb-md-0',
      'standalone',
    ],
    'target' => '_blank',
  ]);
  /** @var \Drupal\typed_link\Plugin\Field\FieldType\TypedLinkItem $link */
  foreach ($node->get('oe_social_media_links') as $link) {
    $variables['social_links'][] = [
      'icon_position' => 'before',
      'icon' => [
        'path' => $variables['bcl_icon_path'],
        'name' => $link->link_type,
      ],
      'label' => $link->title,
      'path' => $link->getUrl(),
      'attributes' => $attributes,
    ];
  }
}
