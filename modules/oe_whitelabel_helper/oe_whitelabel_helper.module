<?php

/**
 * @file
 * The OE Whitelabel Helper module.
 */

declare(strict_types = 1);

use Drupal\contact\Entity\ContactForm;
use Drupal\Core\Form\FormStateInterface;
use Drupal\contact\MessageInterface;

/**
 * Implements hook_locale_translation_projects_alter().
 */
function oe_whitelabel_helper_locale_translation_projects_alter(&$projects) {
  $projects['oe_whitelabel_helper']['info']['interface translation server pattern'] = drupal_get_path('module', 'oe_whitelabel_helper') . '/translations/%project-%language.po';
}

/**
 * Implements hook_preprocess_HOOK() for status messages.
 */
function oe_whitelabel_helper_preprocess_status_messages(&$variables) {
  if (!isset($variables['message_list']['status'])) {
    return;
  }

  foreach ($variables['message_list']['status'] as $key => $value) {
    // Target contact_messages which are being rendered in the status message.
    if (
      !is_array($value) ||
      !isset($value['#contact_message']) ||
      !$value['#contact_message'] instanceof MessageInterface
    ) {
      continue;
    }

    /** @var \Drupal\contact\MessageInterface $contact_message */
    $contact_message = $value['#contact_message'];
    /** @var \Drupal\contact\Entity\ContactForm $contact_form */
    $contact_form = ContactForm::load($contact_message->bundle());
    $is_corporate_form = (boolean) $contact_form->getThirdPartySetting('oe_contact_forms', 'is_corporate_form', FALSE);

    // We work only with corporate forms from here.
    if (!$is_corporate_form) {
      continue;
    }

    $optional_fields = $contact_form->getThirdPartySetting('oe_contact_forms', 'optional_fields', []);
    $items = [];
    $fields = [
      'name',
      'mail',
      'subject',
      'message',
      'oe_topic',
    ];

    // Add new fields if exists.
    foreach ($contact_message->getFields() as $contact_form_field) {
      if (strpos($contact_form_field->getName(), 'field_') === 0) {
        $fields[] = $contact_form_field->getName();
      }
    }

    if (in_array('oe_country_residence', $optional_fields)) {
      $fields[] = 'oe_country_residence';
    }

    if (in_array('oe_telephone', $optional_fields)) {
      $fields[] = 'oe_telephone';
    }

    // Build the label body pairs for the field_list pattern.
    foreach ($fields as $field_name) {
      /** @var \Drupal\Core\Field\FieldItemList $field */
      $field = $contact_message->get($field_name);
      if ($field->isEmpty() || !$field->access()) {
        continue;
      }
      $value = 'value';
      if ($field->getFieldDefinition()->getType() == 'skos_concept_entity_reference') {
        $value = 'target_id';
      }
      $items[] = [
        'term' => $field->getFieldDefinition()->getLabel(),
        'definition' => $field->first()->getValue()[$value],
      ];
    }
    $variables['message_list']['status'][$key] = [
      '#type' => 'pattern',
      '#id' => 'description_list',
      '#orientation' => 'horizontal',
      '#fields' => [
        'items' => $items,
      ],
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function oe_whitelabel_helper_form_contact_message_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add 'hr' line on top of the checkboxes.
  $form['line'] = [
    '#type' => 'markup',
    '#markup' => '<hr class="mt-5 mb-5"/>',
    '#weight' => 6,
  ];
}
